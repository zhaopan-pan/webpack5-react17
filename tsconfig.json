{
    "compilerOptions": {
        "emitDecoratorMetadata": true,
        "experimentalDecorators": true,
        "target": "es6", // 指定ECMAScript目标版本
        "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
        "strict": true,
        "forceConsistentCasingInFileNames": true,
        "allowJs": true,
        "outDir": "./dist/", // 重定向输出目录
        "esModuleInterop": true,
        "noImplicitAny": false, // 在表达式和声明上有隐含的 any类型时报错。（默认为false，如有不需要兼容的老代码用默认即可）
        "sourceMap": true,
        "module": "esnext",
        "moduleResolution": "node", // 决定如何处理模块
        "isolatedModules": true,
        "importHelpers": true,
        "lib": ["esnext", "dom", "dom.iterable"], // 编译过程中需要引入的库文件的列表。
        "skipLibCheck": true, //忽略所有库中的声明文件（ *.d.ts）的类型检查。
        "jsx": "react", // 在 .tsx文件里支持JSX,
        "suppressImplicitAnyIndexErrors": true,
        "typeRoots": ["node", "node_modules/@types"],
        "baseUrl": ".",
        "paths": {
            "@/*": ["src/*"],
            "@/hooks/*": ["src/hooks/*"],
            "@/container/*": ["src/container/*"],
            "@/store/*": ["src/store/*"],
            "@/styles/*": ["src/styles/*"],
            "@/assets/*": ["src/assets/*"],
            "@/component/*": ["src/component/*"]
        }
    },
    "include": ["./src/*", "./declaration.d.ts"],
    "exclude": ["node_modules", "**/*.spec.ts"]
}
